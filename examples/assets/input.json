{
  "name": "OrderManagementAgent",
  "description": "You are an AI Agent whose job is to help Salesforce for Internal Company Employees manage, monitor, and optimize Heroku applications through various automated tasks.",
  "agent_type": "External",
  "agent_template_type": "EinsteinServiceAgent",
  "company_name": "Salesforce",
  "domain": "Technology",
  "sample_utterances": [
    "Deploy the latest version of our Heroku app using the Salesforce Metadata API.",
    "Can you check the status of our Heroku app and report any issues?",
    "Update the configuration of our Heroku app via REST endpoints.",
    "Analyze the logs from our Heroku app and provide insights.",
    "Automatically scale our Heroku app resources based on usage patterns."
  ],
  "variables": [
    {
      "name": "variable1",
      "data_type": "string",
      "default_value": "val1"
    }
  ],
  "system_messages": [
    {
      "message": "Welcome message",
      "msg_type": "welcome"
    },
    {
      "message": "Error handling message",
      "msg_type": "error"
    }
  ],
  "topics": [
    {
      "name": "Reservation Management",
      "description": "Handles all user requests related to finding, changing, or managing reservations.",
      "scope": "Handles all user requests related to finding, changing, or managing reservations.",
      "instructions": [
        "If a user cannot find their reservation, attempt to locate it by querying the reservation system.",
        "If a user wants to change or update a reservation, guide them through the process and update the reservation system accordingly.",
        "When a user encounters issues that the system cannot resolve, provide relevant troubleshooting tips.",
        "If the issue persists and seems complex, notify the user that the issue will be escalated and forward the request to the appropriate human agent."
      ],
      "actions": [
        {
          "name": "findReservation",
          "description": "Search and retrieve reservation details using user ID and reservation ID",
          "inputs": [
            {
              "name": "userID",
              "description": "User identification number",
              "data_type": "string"
            },
            {
              "name": "reservationID",
              "description": "Reservation identification number",
              "data_type": "string"
            }
          ],
          "outputs": [
            {
              "name": "status",
              "description": "Status of the reservation search",
              "data_type": "string",
              "required": true
            },
            {
              "name": "reservationDetails",
              "description": "Details of the found reservation",
              "data_type": "object",
              "required": true
            }
          ],
          "example_output": {
            "status": "success",
            "reservationDetails": {
              "reservationID": "12345",
              "checkInDate": "2023-10-21",
              "status": "confirmed"
            }
          }
        },
        {
          "name": "updateReservation",
          "description": "Modify existing reservation details with new information",
          "inputs": [
            {
              "name": "reservationID",
              "description": "Reservation identification number",
              "data_type": "string"
            },
            {
              "name": "newDetails",
              "description": "New details to update the reservation with",
              "data_type": "string"
            }
          ],
          "outputs": [
            {
              "name": "status",
              "description": "Status of the update operation",
              "data_type": "string",
              "required": true
            },
            {
              "name": "message",
              "description": "Detailed message about the update result",
              "data_type": "string",
              "required": true
            }
          ],
          "example_output": {
            "status": "success",
            "message": "Reservation updated successfully"
          }
        },
        {
          "name": "provideTroubleshootingTips",
          "description": "Provide helpful troubleshooting suggestions for common reservation issues",
          "inputs": [
            {
              "name": "issue",
              "description": "Description of the reservation issue",
              "data_type": "string"
            }
          ],
          "outputs": [
            {
              "name": "tips",
              "description": "List of troubleshooting tips",
              "data_type": "array",
              "required": true
            }
          ],
          "example_output": {
            "tips": [
              "Ensure the reservation ID is correct",
              "Check that the reservation is for the correct date"
            ]
          }
        }
      ]
    },
    {
      "name": "Payment Assistance",
      "description": "Addresses user issues related to payment processing, refunds, and troubleshooting payment errors.",
      "scope": "Addresses user issues related to payment processing, refunds, and troubleshooting payment errors.",
      "instructions": [
        "If a user is experiencing trouble with payment processing, identify the issue and provide guidance based on payment system data.",
        "If a user requests a refund, confirm the eligibility and process it through the payment system.",
        "Offer troubleshooting steps for common payment errors.",
        "For complex payment issues that require human intervention, inform the user and escalate the case."
      ],
      "actions": [
        {
          "name": "processPayment",
          "description": "Process a payment transaction with provided user and payment details",
          "inputs": [
            {
              "name": "userId",
              "description": "User identification number",
              "data_type": "string"
            },
            {
              "name": "paymentDetails",
              "description": "Details of the payment to be processed",
              "data_type": "string"
            }
          ],
          "outputs": [
            {
              "name": "status",
              "description": "Status of the payment transaction",
              "data_type": "string",
              "required": true
            },
            {
              "name": "transactionID",
              "description": "Unique identifier for the transaction",
              "data_type": "string",
              "required": true
            },
            {
              "name": "amount",
              "description": "Transaction amount",
              "data_type": "string",
              "required": true
            },
            {
              "name": "currency",
              "description": "Currency code",
              "data_type": "string",
              "required": true
            }
          ],
          "example_output": {
            "status": "success",
            "transactionID": "trans12345",
            "amount": "100.00",
            "currency": "USD"
          }
        },
        {
          "name": "initiateRefund",
          "description": "Start the refund process for a specific order",
          "inputs": [
            {
              "name": "orderID",
              "description": "Order identification number for refund",
              "data_type": "string"
            }
          ],
          "outputs": [
            {
              "name": "status",
              "description": "Status of the refund request",
              "data_type": "string",
              "required": true
            },
            {
              "name": "refundID",
              "description": "Unique identifier for the refund",
              "data_type": "string",
              "required": true
            },
            {
              "name": "amount",
              "description": "Refund amount",
              "data_type": "string",
              "required": true
            },
            {
              "name": "currency",
              "description": "Currency code",
              "data_type": "string",
              "required": true
            }
          ],
          "example_output": {
            "status": "success",
            "refundID": "refund54321",
            "amount": "100.00",
            "currency": "USD"
          }
        },
        {
          "name": "troubleshootPaymentError",
          "description": "Analyze payment error codes and provide resolution steps",
          "inputs": [
            {
              "name": "errorCode",
              "description": "Code representing the payment error encountered",
              "data_type": "string"
            }
          ],
          "outputs": [
            {
              "name": "solution",
              "description": "Detailed solution for the payment error",
              "data_type": "string",
              "required": true
            }
          ],
          "example_output": {
            "solution": "Ensure your payment method has sufficient funds and retry the transaction. For error code E123, contact your bank."
          }
        }
      ]
    },
    {
      "name": "General FAQs and Troubleshooting",
      "description": "Assist users with common queries about using the system and troubleshoot basic issues.",
      "scope": "Assist users with common queries about using the system and troubleshoot basic issues.",
      "instructions": [
        "Use the knowledge base to answer general questions about policies, procedures, and usage.",
        "Provide step-by-step guidance for troubleshooting minor technical issues.",
        "For issues not covered by the FAQ, recommend contacting support for further assistance."
      ],
      "actions": [
        {
          "name": "AnswerQuestionsWithKnowledge",
          "description": "Search knowledge base and provide relevant answers to user queries",
          "inputs": [
            {
              "name": "query",
              "description": "User's question or query",
              "data_type": "string"
            }
          ],
          "outputs": [
            {
              "name": "answer",
              "description": "Answer from the knowledge base",
              "data_type": "string",
              "required": true
            }
          ],
          "example_output": {
            "answer": "Our check-in time is from 3 PM on the day of arrival. Early check-in is subject to availability."
          }
        },
        {
          "name": "provideBasicTroubleshooting",
          "description": "Provide step-by-step troubleshooting instructions for common issues",
          "inputs": [
            {
              "name": "task",
              "description": "The task related to a basic troubleshooting request",
              "data_type": "string"
            }
          ],
          "outputs": [
            {
              "name": "steps",
              "description": "List of troubleshooting steps",
              "data_type": "array",
              "required": true
            }
          ],
          "example_output": {
            "steps": [
              "Restart your device",
              "Clear the app cache",
              "Ensure you have an active internet connection"
            ]
          }
        }
      ]
    },
    {
      "name": "Escalation",
      "description": "Handle the escalation process when user issues cannot be resolved by the autonomous agent.",
      "scope": "Handle the escalation process when user issues cannot be resolved by the autonomous agent.",
      "instructions": [
        "When an issue persists despite troubleshooting efforts, initiate the escalation process.",
        "Ensure all relevant user information and context are transferred to the human agent to minimize the need for the user to repeat themselves."
      ],
      "actions": [
        {
          "name": "escalate",
          "description": "Transfer the conversation to a human agent with all relevant context",
          "inputs": [
            {
              "name": "issueDetails",
              "description": "Details of the issue to be escalated",
              "data_type": "string"
            }
          ],
          "outputs": [
            {
              "name": "status",
              "description": "Status of the escalation",
              "data_type": "string",
              "required": true
            },
            {
              "name": "ticketID",
              "description": "Unique identifier for the escalation ticket",
              "data_type": "string",
              "required": true
            },
            {
              "name": "assignedAgent",
              "description": "Name of the assigned human agent",
              "data_type": "string",
              "required": true
            }
          ],
          "example_output": {
            "status": "escalated",
            "ticketID": "ticket78901",
            "assignedAgent": "John Doe"
          }
        }
      ]
    }
  ]
}